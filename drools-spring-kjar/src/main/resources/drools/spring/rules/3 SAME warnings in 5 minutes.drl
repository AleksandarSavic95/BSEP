package drools.spring.rules

import ftn.bsep9.model.Log;
import java.util.Date;
import ftn.bsep9.service.AlarmService;

global AlarmService alarmService;

declare MultipleSameWarningsEvent
    @role(event)
    @expires(5m)
    @timestamp(occuredAt)
    macAddress: String
    occuredAt: Date
end

rule "3 SAME warnings in 5 minutes"
    when
        // $log1: Log( $severity: severityType, $trackedMacAddress: MACAddress )
        $log1: Log(severityType.equals("WARNING"), $trackedMacAddress: MACAddress)
        Number(intValue >= 3) from accumulate(
            $log2: Log(
                text.equals($log1.getText()),    // same
                severityType.equals("WARNING"), // warnings
                MACAddress.equals($trackedMacAddress),
                this meets[5m] $log1
            ),
            count($log2)
        )
        // TODO: zapamtiti $severity da mozemo pratiti vise tipova severity-a jednim pravilom! :)
         not (
            MultipleSameWarningsEvent(macAddress == $trackedMacAddress) // , severityType == $severity
            over window:time(5m)
         )
    then
        insert(new MultipleSameWarningsEvent($trackedMacAddress, new Date()));
        alarmService.fireAlarm("warning", $trackedMacAddress, null, "3 same warnings on machine: " + $trackedMacAddress);
end